                            | #######################################################################
                            | # Test for copying block of size 62;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f45006000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23e00000000000000 | 	irmovq $62, %rdx		# src and dst have 62 elements
0x014: 30f6d803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7d001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
                            | # i in %rcx, limit in %rbp
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: 2025                 | 	rrmovq %rdx, %rbp
0x036: c0f5faffffffffffffff | 	iaddq $-6, %rbp
0x040: 6311                 | 	xorq %rcx, %rcx
0x042: 2018                 | Test:	rrmovq %rcx, %r8
0x044: 6158                 | 	subq %rbp, %r8
0x046: 757201000000000000   | 	jge Next		
                            | 	
0x04f: 50870000000000000000 | Loop:	mrmovq (%rdi), %r8	# read val from src...
0x059: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x063: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x06d: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x077: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x081: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x08b: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x095: 2003                 | 	rrmovq %rax, %rbx
0x097: c0f30100000000000000 | 	iaddq $1, %rbx
0x0a1: 6288                 | 	andq %r8, %r8	
0x0a3: 2630                 | 	cmovg %rbx, %rax
0x0a5: 2003                 | 	rrmovq %rax, %rbx
0x0a7: c0f30100000000000000 | 	iaddq $1, %rbx
0x0b1: 6299                 | 	andq %r9, %r9	
0x0b3: 2630                 | 	cmovg %rbx, %rax
0x0b5: 2003                 | 	rrmovq %rax, %rbx
0x0b7: c0f30100000000000000 | 	iaddq $1, %rbx
0x0c1: 62aa                 | 	andq %r10, %r10	
0x0c3: 2630                 | 	cmovg %rbx, %rax
0x0c5: 2003                 | 	rrmovq %rax, %rbx
0x0c7: c0f30100000000000000 | 	iaddq $1, %rbx
0x0d1: 62bb                 | 	andq %r11, %r11
0x0d3: 2630                 | 	cmovg %rbx, %rax
0x0d5: 2003                 | 	rrmovq %rax, %rbx
0x0d7: c0f30100000000000000 | 	iaddq $1, %rbx
0x0e1: 62cc                 | 	andq %r12, %r12	
0x0e3: 2630                 | 	cmovg %rbx, %rax
0x0e5: 2003                 | 	rrmovq %rax, %rbx
0x0e7: c0f30100000000000000 | 	iaddq $1, %rbx
0x0f1: 62dd                 | 	andq %r13, %r13	
0x0f3: 2630                 | 	cmovg %rbx, %rax
0x0f5: 2003                 | 	rrmovq %rax, %rbx
0x0f7: c0f30100000000000000 | 	iaddq $1, %rbx
0x101: 62ee                 | 	andq %r14, %r14	
0x103: 2630                 | 	cmovg %rbx, %rax
0x105: 40860000000000000000 | 	rmmovq %r8, (%rsi)	# ...and store it to dst
0x10f: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x119: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x123: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x12d: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)
0x137: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)
0x141: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)
0x14b: c0f73800000000000000 | 	iaddq $56, %rdi		
0x155: c0f63800000000000000 | 	iaddq $56, %rsi		
0x15f: c0f10700000000000000 | 	iaddq $7, %rcx	
0x169: 704200000000000000   | 	jmp Test
0x172: 2018                 | Next:	rrmovq %rcx, %r8
0x174: 6128                 | 	subq %rdx, %r8
0x176: 75ca01000000000000   | 	jge Done
0x17f: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x189: 2003                 | 	rrmovq %rax, %rbx
0x18b: c0f30100000000000000 | 	iaddq $1, %rbx
0x195: 62aa                 | 	andq %r10, %r10
0x197: 2630                 | 	cmovg %rbx, %rax
0x199: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x1a3: c0f10100000000000000 | 	iaddq $1, %rcx
0x1ad: c0f70800000000000000 | 	iaddq $8, %rdi
0x1b7: c0f60800000000000000 | 	iaddq $8, %rsi
0x1c1: 707201000000000000   | 	jmp Next
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1ca:                      | Done:
0x1ca: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1cb:                      | End:
                            | #/* $end ncopy-ys */
0x1cb:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1d0:                      | 	.align 8
0x1d0:                      | src:
0x1d0: ffffffffffffffff     | 	.quad -1
0x1d8: feffffffffffffff     | 	.quad -2
0x1e0: 0300000000000000     | 	.quad 3
0x1e8: 0400000000000000     | 	.quad 4
0x1f0: fbffffffffffffff     | 	.quad -5
0x1f8: faffffffffffffff     | 	.quad -6
0x200: 0700000000000000     | 	.quad 7
0x208: f8ffffffffffffff     | 	.quad -8
0x210: f7ffffffffffffff     | 	.quad -9
0x218: f6ffffffffffffff     | 	.quad -10
0x220: 0b00000000000000     | 	.quad 11
0x228: f4ffffffffffffff     | 	.quad -12
0x230: 0d00000000000000     | 	.quad 13
0x238: f2ffffffffffffff     | 	.quad -14
0x240: 0f00000000000000     | 	.quad 15
0x248: f0ffffffffffffff     | 	.quad -16
0x250: efffffffffffffff     | 	.quad -17
0x258: eeffffffffffffff     | 	.quad -18
0x260: 1300000000000000     | 	.quad 19
0x268: 1400000000000000     | 	.quad 20
0x270: ebffffffffffffff     | 	.quad -21
0x278: 1600000000000000     | 	.quad 22
0x280: 1700000000000000     | 	.quad 23
0x288: 1800000000000000     | 	.quad 24
0x290: e7ffffffffffffff     | 	.quad -25
0x298: e6ffffffffffffff     | 	.quad -26
0x2a0: 1b00000000000000     | 	.quad 27
0x2a8: e4ffffffffffffff     | 	.quad -28
0x2b0: e3ffffffffffffff     | 	.quad -29
0x2b8: 1e00000000000000     | 	.quad 30
0x2c0: e1ffffffffffffff     | 	.quad -31
0x2c8: 2000000000000000     | 	.quad 32
0x2d0: 2100000000000000     | 	.quad 33
0x2d8: deffffffffffffff     | 	.quad -34
0x2e0: 2300000000000000     | 	.quad 35
0x2e8: 2400000000000000     | 	.quad 36
0x2f0: dbffffffffffffff     | 	.quad -37
0x2f8: daffffffffffffff     | 	.quad -38
0x300: d9ffffffffffffff     | 	.quad -39
0x308: d8ffffffffffffff     | 	.quad -40
0x310: 2900000000000000     | 	.quad 41
0x318: 2a00000000000000     | 	.quad 42
0x320: 2b00000000000000     | 	.quad 43
0x328: d4ffffffffffffff     | 	.quad -44
0x330: 2d00000000000000     | 	.quad 45
0x338: d2ffffffffffffff     | 	.quad -46
0x340: d1ffffffffffffff     | 	.quad -47
0x348: 3000000000000000     | 	.quad 48
0x350: cfffffffffffffff     | 	.quad -49
0x358: 3200000000000000     | 	.quad 50
0x360: cdffffffffffffff     | 	.quad -51
0x368: 3400000000000000     | 	.quad 52
0x370: 3500000000000000     | 	.quad 53
0x378: caffffffffffffff     | 	.quad -54
0x380: 3700000000000000     | 	.quad 55
0x388: 3800000000000000     | 	.quad 56
0x390: c7ffffffffffffff     | 	.quad -57
0x398: c6ffffffffffffff     | 	.quad -58
0x3a0: 3b00000000000000     | 	.quad 59
0x3a8: 3c00000000000000     | 	.quad 60
0x3b0: 3d00000000000000     | 	.quad 61
0x3b8: 3e00000000000000     | 	.quad 62
0x3c0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x3d0:                      | 	.align 16
0x3d0:                      | Predest:
0x3d0: fadebc0000000000     | 	.quad 0xbcdefa
0x3d8:                      | dest:
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8:                      | Postdest:
0x5c8: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x5d0:                      | .align 8
                            | # Run time stack
0x5d0: 0000000000000000     | 	.quad 0
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
0x608: 0000000000000000     | 	.quad 0
0x610: 0000000000000000     | 	.quad 0
0x618: 0000000000000000     | 	.quad 0
0x620: 0000000000000000     | 	.quad 0
0x628: 0000000000000000     | 	.quad 0
0x630: 0000000000000000     | 	.quad 0
0x638: 0000000000000000     | 	.quad 0
0x640: 0000000000000000     | 	.quad 0
0x648: 0000000000000000     | 	.quad 0
                            | 
0x650:                      | Stack:
