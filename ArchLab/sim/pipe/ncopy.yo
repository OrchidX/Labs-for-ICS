                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Name: XingYuhan
                            | # ID: 2000017797@stu.pku.edu.cn
                            | # Description of the optimizations:
                            | #    Generally speaking, the modified code performs ? optimizations. 
                            | # 1) It uses instruction iaddq instead of the combination of irmovq and addq.
                            | # 2) It applies 10*2 loop unrolling, using 2 temporary registers %r8 and %r9.
                            | # 3) When dealing with the final few elements, the code uses ternary search to determine the #    number of the remaining elements. Since 9 = 3^2, ternary search is better than binary #    search, which might generate floating number.
                            | # 4) By staggering memory reading and writing, it partly eliminate the load/use hazards.
                            | # 5) The shorter the length of src is, the greater the impact of constant instructions on #    CPE. Meanwhile, the pipe-full.hcl uses an always taken branch prediction strategy.   #    Therefore, the order of the length judgement is specially arranged, prioritizing the #    shorter ones, to reduce the average cost of mispredicted branches.
                            | # Description ends
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
                            | # i in %rcx, limit in %rbp
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x000: c0f2f6ffffffffffffff | 	iaddq $-10, %rdx	# len < 10?
0x00a: 72d401000000000000   | 	jl L0			# if so, goto L0
                            | 	
0x013: 50870000000000000000 | L1: 	mrmovq (%rdi), %r8
0x01d: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x027: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x031: 6288                 | 	andq %r8, %r8
0x033: 714600000000000000   | 	jle L2
0x03c: c0f00100000000000000 | 	iaddq $1, %rax
0x046: 50871000000000000000 | L2:	mrmovq 16(%rdi), %r8
0x050: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x05a: 6299                 | 	andq %r9, %r9
0x05c: 716f00000000000000   | 	jle L3
0x065: c0f00100000000000000 | 	iaddq $1, %rax
0x06f: 50971800000000000000 | L3:	mrmovq 24(%rdi), %r9
0x079: 40861000000000000000 | 	rmmovq %r8, 16(%rsi)
0x083: 6288                 | 	andq %r8, %r8
0x085: 719800000000000000   | 	jle L4
0x08e: c0f00100000000000000 | 	iaddq $1, %rax
0x098: 50872000000000000000 | L4:	mrmovq 32(%rdi), %r8
0x0a2: 40961800000000000000 | 	rmmovq %r9, 24(%rsi)
0x0ac: 6299                 | 	andq %r9, %r9
0x0ae: 71c100000000000000   | 	jle L5
0x0b7: c0f00100000000000000 | 	iaddq $1, %rax
0x0c1: 50972800000000000000 | L5:	mrmovq 40(%rdi), %r9
0x0cb: 40862000000000000000 | 	rmmovq %r8, 32(%rsi)
0x0d5: 6288                 | 	andq %r8, %r8
0x0d7: 71ea00000000000000   | 	jle L6
0x0e0: c0f00100000000000000 | 	iaddq $1, %rax
0x0ea: 50873000000000000000 | L6:	mrmovq 48(%rdi), %r8
0x0f4: 40962800000000000000 | 	rmmovq %r9, 40(%rsi)
0x0fe: 6299                 | 	andq %r9, %r9
0x100: 711301000000000000   | 	jle L7
0x109: c0f00100000000000000 | 	iaddq $1, %rax
0x113: 50973800000000000000 | L7:	mrmovq 56(%rdi), %r9
0x11d: 40863000000000000000 | 	rmmovq %r8, 48(%rsi)
0x127: 6288                 | 	andq %r8, %r8
0x129: 713c01000000000000   | 	jle L8
0x132: c0f00100000000000000 | 	iaddq $1, %rax
0x13c: 50874000000000000000 | L8:	mrmovq 64(%rdi), %r8
0x146: 40963800000000000000 | 	rmmovq %r9, 56(%rsi)
0x150: 6299                 | 	andq %r9, %r9
0x152: 716501000000000000   | 	jle L9
0x15b: c0f00100000000000000 | 	iaddq $1, %rax
0x165: 50974800000000000000 | L9:	mrmovq 72(%rdi), %r9
0x16f: 40864000000000000000 | 	rmmovq %r8, 64(%rsi)
0x179: 6288                 | 	andq %r8, %r8
0x17b: 718e01000000000000   | 	jle L10
0x184: c0f00100000000000000 | 	iaddq $1, %rax
0x18e: 40964800000000000000 | L10:	rmmovq %r9, 72(%rsi)
0x198: 6299                 | 	andq %r9, %r9
0x19a: 71ad01000000000000   | 	jle test
0x1a3: c0f00100000000000000 | 	iaddq $1, %rax
                            | 	
0x1ad: c0f75000000000000000 | test:	iaddq $80, %rdi	# src += 10
0x1b7: c0f65000000000000000 | 	iaddq $80, %rsi	# dst += 10
0x1c1: c0f2f6ffffffffffffff | 	iaddq $-10, %rdx	# len >= 10?
0x1cb: 751300000000000000   | 	jge L1			# if so, goto L1
                            | 
0x1d4: c0f20700000000000000 | L0:	iaddq $7, %rdx		# compare len : 3
0x1de: 724d02000000000000   | 	jl Less		# if >, goto More, if <, goto Less
0x1e7: 735703000000000000   | 	je R3			# if ==, goto R3
                            | 	
0x1f0: c0f2fdffffffffffffff | More:	iaddq $-3, %rdx	# compare len : 6
0x1fa: 723102000000000000   | 	jl MLess
0x203: 73dc02000000000000   | 	je R6			# if ==, goto R6
0x20c: c0f2feffffffffffffff | MMore:	iaddq $-2, %rdx	# compare len : 8
0x216: 72b302000000000000   | 	jl R7
0x21f: 738a02000000000000   | 	je R8
0x228: 707402000000000000   | 	jmp R9
0x231: c0f20100000000000000 | MLess:	iaddq $1, %rdx		# compare len : 5
0x23b: 722e03000000000000   | 	jl R4
0x244: 730503000000000000   | 	je R5
                            | 	
0x24d: c0f20200000000000000 | Less:	iaddq $2, %rdx		# compare len : 1
0x257: 73a903000000000000   | 	je R1			# if ==, goto R1
0x260: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x26a: 738003000000000000   | 	je R2			# if len == 2, goto R2
0x273: 90                   | 	ret			# id len == 0, return
                            | 
                            | 
0x274: 50874000000000000000 | R9:	mrmovq 64(%rdi), %r8
0x27e: 40864000000000000000 | 	rmmovq %r8, 64(%rsi)
0x288: 6288                 | 	andq %r8, %r8
0x28a: 50873800000000000000 | R8:	mrmovq 56(%rdi), %r8
0x294: 71a702000000000000   | 	jle N8
0x29d: c0f00100000000000000 | 	iaddq $1, %rax
0x2a7: 40863800000000000000 | N8:	rmmovq %r8, 56(%rsi)
0x2b1: 6288                 | 	andq %r8, %r8
0x2b3: 50873000000000000000 | R7:	mrmovq 48(%rdi), %r8
0x2bd: 71d002000000000000   | 	jle N7
0x2c6: c0f00100000000000000 | 	iaddq $1, %rax
0x2d0: 40863000000000000000 | N7:	rmmovq %r8, 48(%rsi)
0x2da: 6288                 | 	andq %r8, %r8
0x2dc: 50872800000000000000 | R6:	mrmovq 40(%rdi), %r8
0x2e6: 71f902000000000000   | 	jle N6
0x2ef: c0f00100000000000000 | 	iaddq $1, %rax
0x2f9: 40862800000000000000 | N6:	rmmovq %r8, 40(%rsi)
0x303: 6288                 | 	andq %r8, %r8
0x305: 50872000000000000000 | R5:	mrmovq 32(%rdi), %r8
0x30f: 712203000000000000   | 	jle N5
0x318: c0f00100000000000000 | 	iaddq $1, %rax
0x322: 40862000000000000000 | N5:	rmmovq %r8, 32(%rsi)
0x32c: 6288                 | 	andq %r8, %r8
0x32e: 50871800000000000000 | R4:	mrmovq 24(%rdi), %r8
0x338: 714b03000000000000   | 	jle N4
0x341: c0f00100000000000000 | 	iaddq $1, %rax
0x34b: 40861800000000000000 | N4:	rmmovq %r8, 24(%rsi)
0x355: 6288                 | 	andq %r8, %r8
0x357: 50871000000000000000 | R3:	mrmovq 16(%rdi), %r8
0x361: 717403000000000000   | 	jle N3
0x36a: c0f00100000000000000 | 	iaddq $1, %rax
0x374: 40861000000000000000 | N3:	rmmovq %r8, 16(%rsi)
0x37e: 6288                 | 	andq %r8, %r8
0x380: 50870800000000000000 | R2:	mrmovq 8(%rdi), %r8
0x38a: 719d03000000000000   | 	jle N2
0x393: c0f00100000000000000 | 	iaddq $1, %rax
0x39d: 40860800000000000000 | N2:	rmmovq %r8, 8(%rsi)
0x3a7: 6288                 | 	andq %r8, %r8
0x3a9: 50870000000000000000 | R1:	mrmovq (%rdi), %r8
0x3b3: 71c603000000000000   | 	jle N1
0x3bc: c0f00100000000000000 | 	iaddq $1, %rax
0x3c6: 40860000000000000000 | N1:	rmmovq %r8, (%rsi)
0x3d0: 6288                 | 	andq %r8, %r8
0x3d2: 71e503000000000000   | 	jle Done
0x3db: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3e5:                      | Done:
0x3e5: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3e6:                      | End:
                            | #/* $end ncopy-ys */
