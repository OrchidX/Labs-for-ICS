#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
# i in %rcx, limit in %rbp
ncopy:

##################################################################
# You can modify this portion
	# Loop1 header
	xorq %rax,%rax		# count = 0;
	rrmovq %rdx, %rbp
	iaddq $-7, %rbp
	xorq %rcx, %rcx
Test1:	rrmovq %rcx, %r8
	subq %rbp, %r8
	jge Next3		
	
Unr8:	mrmovq (%rdi), %r8	# read val from src...
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r8, %r8	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r9, %r9	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r10, %r10	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r11, %r11
	cmovg %rbx, %rax
	rmmovq %r8, (%rsi)	# ...and store it to dst
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	mrmovq 32(%rdi), %r8	# read val from src...
	mrmovq 40(%rdi), %r9
	mrmovq 48(%rdi), %r10
	mrmovq 56(%rdi), %r11
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r8, %r8	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r9, %r9	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r10, %r10	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r11, %r11
	cmovg %rbx, %rax
	rmmovq %r8, 32(%rsi)	# ...and store it to dst
	rmmovq %r9, 40(%rsi)
	rmmovq %r10, 48(%rsi)
	rmmovq %r11, 56(%rsi)
	iaddq $64, %rdi		
	iaddq $64, %rsi		
	iaddq $8, %rcx	
	jmp Test1
Next3:	iaddq $4, %rbp
Test4:	rrmovq %rcx, %r8
	subq %rbp, %r8
	jge Next4
Unr4:	mrmovq (%rdi), %r8	# read val from src...
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r8, %r8	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r9, %r9	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r10, %r10	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r11, %r11
	cmovg %rbx, %rax
	rmmovq %r8, (%rsi)	# ...and store it to dst
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	
	iaddq $32, %rdi
	iaddq $32, %rsi
	iaddq $4, %rcx
	
Next4:	iaddq $2, %rbp
Test5:	rrmovq %rcx, %r8
	subq %rbp, %r8
	jge Next5
Unr2:	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r8, %r8	
	cmovg %rbx, %rax
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r9, %r9	
	cmovg %rbx, %rax
	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)
	
	iaddq $16, %rdi
	iaddq $16, %rsi
	iaddq $2, %rcx

Next5:	subq %rdx, %rcx
	jge Done
	mrmovq (%rdi), %r8
	rrmovq %rax, %rbx
	iaddq $1, %rbx
	andq %r8, %r8
	cmovg %rbx, %rax
	rmmovq %r8, (%rsi)
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
